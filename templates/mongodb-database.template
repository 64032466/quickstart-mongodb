{
    "AWSTemplateFormatVersion": "2010-09-09",
    "Description": "(000F) Deploy MongoDB Replica Set on AWS (Existing VPC)",
    "Metadata": {
        "AWS::CloudFormation::Interface": {
            "ParameterGroups": [
                {
                    "Label": {
                        "default": "Network Configuration"
                    },
                    "Parameters": [
                        "VPC",
                        "PrimaryNodeSubnet",
                        "Secondary0NodeSubnet",
                        "Secondary1NodeSubnet",
                        "BastionSecurityGroupID"
                    ]
                },
                {
                    "Label": {
                        "default": "Security Configuration"
                    },
                    "Parameters": [
                        "KeyName"
                    ]
                },
                {
                    "Label": {
                        "default": "MongoDB Database Configuration"
                    },
                    "Parameters": [
                        "ClusterReplicaSetCount",
                        "ClusterShardCount",
                        "ConfigServerInstanceType",
                        "Iops",
                        "MongoDBVersion",
                        "MongoDBAdminUsername",
                        "MongoDBAdminPassword",
                        "NodeInstanceType",
                        "ShardsPerNode",
                        "VolumeSize",
                        "VolumeType"
                    ]
                },
                {
                    "Label": {
                        "default": "AWS Quick Start Configuration"
                    },
                    "Parameters": [
                        "BuildBucket"
                    ]
                }
            ]
        }
    },
    "Parameters": {
        "BastionSecurityGroupID": {
            "Description": "ID of the Bastion Security Group (e.g., sg-7f16e910)",
            "Type": "AWS::EC2::SecurityGroup::Id"
        },
        "ClusterReplicaSetCount": {
            "Description": "Number of Replica Set Members. Choose 1 or 3",
            "Type": "String",
            "Default": "1",
            "AllowedValues": [
                "1",
                "3"
            ]
        },
        "ClusterShardCount": {
            "Description": "Number of Shards [0,1,2,3]. 0==No Sharding. Set to > 1 for Sharding",
            "Type": "String",
            "Default": "0",
            "AllowedValues": [
                "0",
                "1",
                "2",
                "3"
            ]
        },
        "MongoDBVersion": {
            "Description": "MongoDB version",
            "Type": "String",
            "Default": "3.2",
            "AllowedValues": [
                "3.4",
                "3.2",
                "3.0"
            ]
        },
        "MongoDBAdminUsername": {
            "Default": "admin",
            "NoEcho": "true",
            "Description": "MongoDB admin account username",
            "Type": "String",
            "MinLength": "1",
            "MaxLength": "16",
            "AllowedPattern": "[a-zA-Z][a-zA-Z0-9]*",
            "ConstraintDescription": "must begin with a letter and contain only alphanumeric characters."
        },
        "MongoDBAdminPassword": {
            "AllowedPattern": "([A-Za-z0-9_@-]{8,32})",
            "ConstraintDescription": "Input your MongoDB database password, Min 8, Maximum of 32 characters. . Allowed characters are: [A-Za-z0-9_@-]",
            "Description": "Enter your MongoDB Database Password, Min 8, maximum of 32 characters.",
            "NoEcho": "true",
            "Type": "String"
        },
        "ShardsPerNode": {
            "Description": "Number of Micro Shards Per Node",
            "Type": "String",
            "Default": "0",
            "AllowedValues": [
                "0",
                "1",
                "2",
                "3",
                "4",
                "5",
                "6",
                "7",
                "8",
                "9",
                "10",
                "11",
                "12",
                "13",
                "14",
                "15",
                "16"
            ]
        },
        "BuildBucket": {
            "Description": "Main Bucket where the templates/scripts are installed. Do not change.",
            "Type": "String",
            "Default": "quickstart-reference/mongodb/latest"
        },
        "KeyName": {
            "Type": "AWS::EC2::KeyPair::KeyName",
            "Default": "home",
            "Description": "Name of an existing EC2 KeyPair. MondoDB instances will launch with this KeyPair."
        },
        "VolumeSize": {
            "Type": "String",
            "Description": "EBS Volume Size (data) to be attached to node in GBs",
            "Default": "400"
        },
        "VolumeType": {
            "Type": "String",
            "Description": "EBS Volume Type (data) to be attached to node in GBs [io1,gp2]",
            "Default": "gp2",
            "AllowedValues": [
                "gp2",
                "io1"
            ]
        },
        "Iops": {
            "Type": "String",
            "Description": "Iops of EBS volume when io1 type is chosen. Otherwise ignored",
            "Default": "100"
        },
        "ConfigServerInstanceType": {
            "Description": "Amazon EC2 instance type for the Config Server",
            "Type": "String",
            "Default": "t2.micro",
            "AllowedValues": [
                "t2.micro",
                "m3.medium",
                "m3.large",
                "m3.xlarge",
                "m3.2xlarge",
                "m4.large",
                "m4.2xlarge",
                "m4.4xlarge",
                "m4.10xlarge",
                "c3.large",
                "c3.xlarge",
                "c3.2xlarge",
                "c3.4xlarge",
                "c3.8xlarge",
                "r3.large",
                "r3.xlarge",
                "r3.2xlarge",
                "r3.4xlarge",
                "r3.8xlarge",
                "i2.xlarge",
                "i2.2xlarge",
                "i2.4xlarge",
                "i2.8xlarge"
            ]
        },
        "NodeInstanceType": {
            "Description": "Amazon EC2 instance type for the MongoDB nodes.",
            "Type": "String",
            "Default": "m4.large",
            "AllowedValues": [
                "m3.medium",
                "m3.large",
                "m3.xlarge",
                "m3.2xlarge",
                "m4.large",
                "m4.2xlarge",
                "m4.4xlarge",
                "m4.10xlarge",
                "c3.large",
                "c3.xlarge",
                "c3.2xlarge",
                "c3.4xlarge",
                "c3.8xlarge",
                "r3.large",
                "r3.xlarge",
                "r3.2xlarge",
                "r3.4xlarge",
                "r3.8xlarge",
                "i2.xlarge",
                "i2.2xlarge",
                "i2.4xlarge",
                "i2.8xlarge"
            ]
        },
        "VPC": {
            "Type": "AWS::EC2::VPC::Id",
            "Description": "VPC-ID of your existing Virtual Private Cloud (VPC) where you want to depoy MongoDB cluster.",
            "AllowedPattern": "vpc-[0-9a-z]{8}"
        },
        "PrimaryNodeSubnet": {
            "Type": "AWS::EC2::Subnet::Id",
            "Description": "Subnet-ID the existing subnet in your VPC where you want to deploy Primary node(s).",
            "AllowedPattern": "subnet-[0-9a-z]{8}"
        },
        "Secondary0NodeSubnet": {
            "Type": "AWS::EC2::Subnet::Id",
            "Description": "Subnet-ID the existing subnet in your VPC where you want to deploy Primary node(s).",
            "AllowedPattern": "subnet-[0-9a-z]{8}"
        },
        "Secondary1NodeSubnet": {
            "Type": "AWS::EC2::Subnet::Id",
            "Description": "Subnet-ID the existing subnet in your VPC where you want to deploy Primary node(s).",
            "AllowedPattern": "subnet-[0-9a-z]{8}"
        }
    },
    "Conditions": {
        "CreateSingleReplicaSet": {
            "Fn::Equals": [
                {
                    "Ref": "ClusterReplicaSetCount"
                },
                "1"
            ]
        },
        "CreateThreeReplicaSet": {
            "Fn::Equals": [
                {
                    "Ref": "ClusterReplicaSetCount"
                },
                "3"
            ]
        },
        "CreateNoShard": {
            "Fn::Equals": [
                {
                    "Ref": "ClusterShardCount"
                },
                "0"
            ]
        },
        "IfSecondaryReplicaNode0": {
            "Fn::And": [
                {
                    "Condition": "CreateNoShard"
                },
                {
                    "Condition": "CreateThreeReplicaSet"
                }
            ]
        }
    },
    "Mappings": {
        "AWSAMIRegionMap": {
            "AMI": {
                "AMZNLINUX": "amzn-ami-hvm-2016.09.1.20170119-x86_64-gp2"
            },
            "ap-northeast-1": {
                "AMZNLINUX": "ami-56d4ad31"
            },
            "ap-northeast-2": {
                "AMZNLINUX": "ami-dac312b4"
            },
            "ap-south-1": {
                "AMZNLINUX": "ami-f9daac96"
            },
            "ap-southeast-1": {
                "AMZNLINUX": "ami-dc9339bf"
            },
            "ap-southeast-2": {
                "AMZNLINUX": "ami-1c47407f"
            },
            "ca-central-1": {
                "AMZNLINUX": "ami-ebed508f"
            },
            "eu-central-1": {
                "AMZNLINUX": "ami-af0fc0c0"
            },
            "eu-west-1": {
                "AMZNLINUX": "ami-70edb016"
            },
            "eu-west-2": {
                "AMZNLINUX": "ami-f1949e95"
            },
            "sa-east-1": {
                "AMZNLINUX": "ami-80086dec"
            },
            "us-east-1": {
                "AMZNLINUX": "ami-0b33d91d"
            },
            "us-east-2": {
                "AMZNLINUX": "ami-c55673a0"
            },
            "us-west-1": {
                "AMZNLINUX": "ami-165a0876"
            },
            "us-west-2": {
                "AMZNLINUX": "ami-f173cc91"
            }
        },
        "AWSInfoRegionMap": {
            "ap-northeast-1": {
                "Partition": "aws",
                "QuickStartS3URL": "https://s3.amazonaws.com"
            },
            "ap-northeast-2": {
                "Partition": "aws",
                "QuickStartS3URL": "https://s3.amazonaws.com"
            },
            "ap-south-1": {
                "Partition": "aws",
                "QuickStartS3URL": "https://s3.amazonaws.com"
            },
            "ap-southeast-1": {
                "Partition": "aws",
                "QuickStartS3URL": "https://s3.amazonaws.com"
            },
            "ap-southeast-2": {
                "Partition": "aws",
                "QuickStartS3URL": "https://s3.amazonaws.com"
            },
            "ca-central-1": {
                "Partition": "aws",
                "QuickStartS3URL": "https://s3.amazonaws.com"
            },
            "eu-central-1": {
                "Partition": "aws",
                "QuickStartS3URL": "https://s3.amazonaws.com"
            },
            "eu-west-1": {
                "Partition": "aws",
                "QuickStartS3URL": "https://s3.amazonaws.com"
            },
            "eu-west-2": {
                "Partition": "aws",
                "QuickStartS3URL": "https://s3.amazonaws.com"
            },
            "sa-east-1": {
                "Partition": "aws",
                "QuickStartS3URL": "https://s3.amazonaws.com"
            },
            "us-east-1": {
                "Partition": "aws",
                "QuickStartS3URL": "https://s3.amazonaws.com"
            },
            "us-east-2": {
                "Partition": "aws",
                "QuickStartS3URL": "https://s3.amazonaws.com"
            },
            "us-gov-west-1": {
                "Partition": "aws-us-gov",
                "QuickStartS3URL": "https://s3-us-gov-west-1.amazonaws.com"
            },
            "us-west-1": {
                "Partition": "aws",
                "QuickStartS3URL": "https://s3.amazonaws.com"
            },
            "us-west-2": {
                "Partition": "aws",
                "QuickStartS3URL": "https://s3.amazonaws.com"
            }
        }
    },
    "Resources": {
        "MongoDBServerAccessSecurityGroup": {
            "Type": "AWS::EC2::SecurityGroup",
            "Properties": {
                "VpcId": {
                    "Ref": "VPC"
                },
                "GroupDescription": "Instances with access to MongoDB servers"
            }
        },
        "MongoDBServerSecurityGroup": {
            "Type": "AWS::EC2::SecurityGroup",
            "Properties": {
                "VpcId": {
                    "Ref": "VPC"
                },
                "GroupDescription": "MongoDB server management and access ports",
                "SecurityGroupIngress": [
                    {
                        "IpProtocol": "tcp",
                        "FromPort": "22",
                        "ToPort": "22",
                        "SourceSecurityGroupId": {
                            "Ref": "BastionSecurityGroupID"
                        }
                    },
                    {
                        "IpProtocol": "tcp",
                        "FromPort": "27017",
                        "ToPort": "27030",
                        "SourceSecurityGroupId": {
                            "Ref": "MongoDBServerAccessSecurityGroup"
                        }
                    },
                    {
                        "IpProtocol": "tcp",
                        "FromPort": "28017",
                        "ToPort": "28017",
                        "SourceSecurityGroupId": {
                            "Ref": "MongoDBServerAccessSecurityGroup"
                        }
                    }
                ]
            }
        },
        "MongoDBServersSecurityGroup": {
            "Type": "AWS::EC2::SecurityGroup",
            "Properties": {
                "VpcId": {
                    "Ref": "VPC"
                },
                "GroupDescription": "MongoDB inter-server communication and management ports",
                "SecurityGroupIngress": [
                    {
                        "IpProtocol": "tcp",
                        "FromPort": "22",
                        "ToPort": "22",
                        "SourceSecurityGroupId": {
                            "Ref": "MongoDBServerSecurityGroup"
                        }
                    },
                    {
                        "IpProtocol": "tcp",
                        "FromPort": "27017",
                        "ToPort": "27030",
                        "SourceSecurityGroupId": {
                            "Ref": "MongoDBServerSecurityGroup"
                        }
                    },
                    {
                        "IpProtocol": "tcp",
                        "FromPort": "28017",
                        "ToPort": "28017",
                        "SourceSecurityGroupId": {
                            "Ref": "MongoDBServerSecurityGroup"
                        }
                    }
                ]
            }
        },
        "MongoDBNodeIAMRole": {
            "Type": "AWS::IAM::Role",
            "Properties": {
                "AssumeRolePolicyDocument": {
                    "Statement": [
                        {
                            "Effect": "Allow",
                            "Principal": {
                                "Service": [
                                    "ec2.amazonaws.com"
                                ]
                            },
                            "Action": [
                                "sts:AssumeRole"
                            ]
                        }
                    ]
                },
                "Path": "/",
                "Policies": [
                    {
                        "PolicyName": "Backup",
                        "PolicyDocument": {
                            "Statement": [
                                {
                                    "Effect": "Allow",
                                    "Action": [
                                        "s3:*",
                                        "ec2:Describe*",
                                        "ec2:AttachNetworkInterface",
                                        "ec2:AttachVolume",
                                        "ec2:CreateTags",
                                        "ec2:CreateVolume",
                                        "ec2:RunInstances",
                                        "ec2:StartInstances",
                                        "ec2:DeleteVolume",
                                        "ec2:CreateSecurityGroup",
                                        "ec2:CreateSnapshot"
                                    ],
                                    "Resource": "*"
                                },
                                {
                                    "Effect": "Allow",
                                    "Action": [
                                        "dynamodb:*",
                                        "dynamodb:Scan",
                                        "dynamodb:Query",
                                        "dynamodb:GetItem",
                                        "dynamodb:BatchGetItem",
                                        "dynamodb:UpdateTable"
                                    ],
                                    "Resource": [
                                        "*"
                                    ]
                                }
                            ]
                        }
                    }
                ]
            }
        },
        "MongoDBNodeIAMProfile": {
            "Type": "AWS::IAM::InstanceProfile",
            "Properties": {
                "Path": "/",
                "Roles": [
                    {
                        "Ref": "MongoDBNodeIAMRole"
                    }
                ]
            }
        },
        "PrimaryReplicaNode0WaitForNodeInstallWaitHandle": {
            "Type": "AWS::CloudFormation::WaitConditionHandle",
            "Properties": {},
            "Condition": "CreateNoShard"
        },
        "PrimaryReplicaNode0": {
            "DependsOn": "PrimaryReplicaNode0WaitForNodeInstallWaitHandle",
            "Condition": "CreateNoShard",
            "Type": "AWS::CloudFormation::Stack",
            "Properties": {
                "TemplateURL": {
                    "Fn::Join": [
                        "/",
                        [
                            {
                                "Fn::FindInMap": [
                                    "AWSInfoRegionMap",
                                    {
                                        "Ref": "AWS::Region"
                                    },
                                    "QuickStartS3URL"
                                ]
                            },
                            {
                                "Ref": "BuildBucket"
                            },
                            "templates/mongodb-node.template"
                        ]
                    ]
                },
                "Parameters": {
                    "BuildBucket": {
                        "Ref": "BuildBucket"
                    },
                    "ClusterReplicaSetCount": {
                        "Ref": "ClusterReplicaSetCount"
                    },
                    "ClusterShardCount": {
                        "Ref": "ClusterShardCount"
                    },
                    "Iops": {
                        "Ref": "Iops"
                    },
                    "KeyName": {
                        "Ref": "KeyName"
                    },
                    "MongoDBVersion": {
                        "Ref": "MongoDBVersion"
                    },
                    "MongoDBAdminUsername": {
                        "Ref": "MongoDBAdminUsername"
                    },
                    "MongoDBAdminPassword": {
                        "Ref": "MongoDBAdminPassword"
                    },
                    "NodeInstanceType": {
                        "Ref": "NodeInstanceType"
                    },
                    "NodeSubnet": {
                        "Ref": "PrimaryNodeSubnet"
                    },
                    "MongoDBServerSecurityGroupID": {
                        "Ref": "MongoDBServerSecurityGroup"
                    },
                    "MongoDBServersSecurityGroupID": {
                        "Ref": "MongoDBServersSecurityGroup"
                    },
                    "MongoDBNodeIAMProfileID": {
                        "Ref": "MongoDBNodeIAMProfile"
                    },
                    "ShardsPerNode": {
                        "Ref": "ShardsPerNode"
                    },
                    "VPC": {
                        "Ref": "VPC"
                    },
                    "VolumeSize": {
                        "Ref": "VolumeSize"
                    },
                    "VolumeType": {
                        "Ref": "VolumeType"
                    },
                    "StackName": {
                        "Ref": "AWS::StackName"
                    },
                    "ImageId": {
                        "Fn::FindInMap": [
                            "AWSAMIRegionMap",
                            {
                                "Ref": "AWS::Region"
                            },
                            "AMZNLINUX"
                        ]
                    },
                    "ReplicaNodeNameTag": "PrimaryReplicaNode0",
                    "NodeReplicaSetIndex": "0",
                    "NodeShardIndex": "-1",
                    "ReplicaNodeWaitForNodeInstallWaitHandle": {
                        "Ref": "PrimaryReplicaNode0WaitForNodeInstallWaitHandle"
                    }
                }
            }
        },
        "PrimaryReplicaNode0WaitForNodeInstall": {
            "Type": "AWS::CloudFormation::WaitCondition",
            "Condition": "CreateNoShard",
            "DependsOn": "PrimaryReplicaNode0",
            "Properties": {
                "Handle": {
                    "Ref": "PrimaryReplicaNode0WaitForNodeInstallWaitHandle"
                },
                "Timeout": "3600"
            }
        },
        "SecondaryReplicaNode0WaitForNodeInstallWaitHandle": {
            "Type": "AWS::CloudFormation::WaitConditionHandle",
            "Properties": {},
            "Condition": "IfSecondaryReplicaNode0"
        },
        "SecondaryReplicaNode0": {
            "DependsOn": "SecondaryReplicaNode0WaitForNodeInstallWaitHandle",
            "Condition": "IfSecondaryReplicaNode0",
            "Type": "AWS::CloudFormation::Stack",
            "Properties": {
                "TemplateURL": {
                    "Fn::Join": [
                        "/",
                        [
                            {
                                "Fn::FindInMap": [
                                    "AWSInfoRegionMap",
                                    {
                                        "Ref": "AWS::Region"
                                    },
                                    "QuickStartS3URL"
                                ]
                            },
                            {
                                "Ref": "BuildBucket"
                            },
                            "templates/mongodb-node.template"
                        ]
                    ]
                },
                "Parameters": {
                    "BuildBucket": {
                        "Ref": "BuildBucket"
                    },
                    "ClusterReplicaSetCount": {
                        "Ref": "ClusterReplicaSetCount"
                    },
                    "ClusterShardCount": {
                        "Ref": "ClusterShardCount"
                    },
                    "Iops": {
                        "Ref": "Iops"
                    },
                    "KeyName": {
                        "Ref": "KeyName"
                    },
                    "MongoDBVersion": {
                        "Ref": "MongoDBVersion"
                    },
                    "MongoDBAdminUsername": {
                        "Ref": "MongoDBAdminUsername"
                    },
                    "MongoDBAdminPassword": {
                        "Ref": "MongoDBAdminPassword"
                    },
                    "NodeInstanceType": {
                        "Ref": "NodeInstanceType"
                    },
                    "NodeSubnet": {
                        "Ref": "Secondary0NodeSubnet"
                    },
                    "MongoDBServerSecurityGroupID": {
                        "Ref": "MongoDBServerSecurityGroup"
                    },
                    "MongoDBServersSecurityGroupID": {
                        "Ref": "MongoDBServersSecurityGroup"
                    },
                    "MongoDBNodeIAMProfileID": {
                        "Ref": "MongoDBNodeIAMProfile"
                    },
                    "ShardsPerNode": {
                        "Ref": "ShardsPerNode"
                    },
                    "VPC": {
                        "Ref": "VPC"
                    },
                    "VolumeSize": {
                        "Ref": "VolumeSize"
                    },
                    "VolumeType": {
                        "Ref": "VolumeType"
                    },
                    "StackName": {
                        "Ref": "AWS::StackName"
                    },
                    "ImageId": {
                        "Fn::FindInMap": [
                            "AWSAMIRegionMap",
                            {
                                "Ref": "AWS::Region"
                            },
                            "AMZNLINUX"
                        ]
                    },
                    "ReplicaNodeNameTag": "SecondaryReplicaNode0",
                    "NodeReplicaSetIndex": "1",
                    "NodeShardIndex": "-1",
                    "ReplicaNodeWaitForNodeInstallWaitHandle": {
                        "Ref": "SecondaryReplicaNode0WaitForNodeInstallWaitHandle"
                    }
                }
            }
        },
        "SecondaryReplicaNode0WaitForNodeInstall": {
            "Type": "AWS::CloudFormation::WaitCondition",
            "Condition": "IfSecondaryReplicaNode0",
            "DependsOn": "SecondaryReplicaNode0",
            "Properties": {
                "Handle": {
                    "Ref": "SecondaryReplicaNode0WaitForNodeInstallWaitHandle"
                },
                "Timeout": "3600"
            }
        },
        "SecondaryReplicaNode1WaitForNodeInstallWaitHandle": {
            "Type": "AWS::CloudFormation::WaitConditionHandle",
            "Properties": {},
            "Condition": "IfSecondaryReplicaNode0"
        },
        "SecondaryReplicaNode1": {
            "DependsOn": "SecondaryReplicaNode1WaitForNodeInstallWaitHandle",
            "Condition": "IfSecondaryReplicaNode0",
            "Type": "AWS::CloudFormation::Stack",
            "Properties": {
                "TemplateURL": {
                    "Fn::Join": [
                        "/",
                        [
                            {
                                "Fn::FindInMap": [
                                    "AWSInfoRegionMap",
                                    {
                                        "Ref": "AWS::Region"
                                    },
                                    "QuickStartS3URL"
                                ]
                            },
                            {
                                "Ref": "BuildBucket"
                            },
                            "templates/mongodb-node.template"
                        ]
                    ]
                },
                "Parameters": {
                    "BuildBucket": {
                        "Ref": "BuildBucket"
                    },
                    "ClusterReplicaSetCount": {
                        "Ref": "ClusterReplicaSetCount"
                    },
                    "ClusterShardCount": {
                        "Ref": "ClusterShardCount"
                    },
                    "Iops": {
                        "Ref": "Iops"
                    },
                    "KeyName": {
                        "Ref": "KeyName"
                    },
                    "MongoDBVersion": {
                        "Ref": "MongoDBVersion"
                    },
                    "MongoDBAdminUsername": {
                        "Ref": "MongoDBAdminUsername"
                    },
                    "MongoDBAdminPassword": {
                        "Ref": "MongoDBAdminPassword"
                    },
                    "NodeInstanceType": {
                        "Ref": "NodeInstanceType"
                    },
                    "NodeSubnet": {
                        "Ref": "Secondary1NodeSubnet"
                    },
                    "MongoDBServerSecurityGroupID": {
                        "Ref": "MongoDBServerSecurityGroup"
                    },
                    "MongoDBServersSecurityGroupID": {
                        "Ref": "MongoDBServersSecurityGroup"
                    },
                    "MongoDBNodeIAMProfileID": {
                        "Ref": "MongoDBNodeIAMProfile"
                    },
                    "ShardsPerNode": {
                        "Ref": "ShardsPerNode"
                    },
                    "VPC": {
                        "Ref": "VPC"
                    },
                    "VolumeSize": {
                        "Ref": "VolumeSize"
                    },
                    "VolumeType": {
                        "Ref": "VolumeType"
                    },
                    "StackName": {
                        "Ref": "AWS::StackName"
                    },
                    "ImageId": {
                        "Fn::FindInMap": [
                            "AWSAMIRegionMap",
                            {
                                "Ref": "AWS::Region"
                            },
                            "AMZNLINUX"
                        ]
                    },
                    "ReplicaNodeNameTag": "SecondaryReplicaNode1",
                    "NodeReplicaSetIndex": "2",
                    "NodeShardIndex": "-1",
                    "ReplicaNodeWaitForNodeInstallWaitHandle": {
                        "Ref": "SecondaryReplicaNode1WaitForNodeInstallWaitHandle"
                    }
                }
            }
        },
        "SecondaryReplicaNode1WaitForNodeInstall": {
            "Type": "AWS::CloudFormation::WaitCondition",
            "Condition": "IfSecondaryReplicaNode0",
            "DependsOn": "SecondaryReplicaNode1",
            "Properties": {
                "Handle": {
                    "Ref": "SecondaryReplicaNode1WaitForNodeInstallWaitHandle"
                },
                "Timeout": "3600"
            }
        }
    },
    "Outputs": {
        "PrimaryReplicaNodeIp": {
            "Value": {
                "Fn::GetAtt": [
                    "PrimaryReplicaNode0",
                    "Outputs.NodePrivateIp"
                ]
            },
            "Description": "Private IP Address of Primary Replica Node"
        },
        "SecondaryReplicaNode0Ip": {
            "Value": {
                "Fn::GetAtt": [
                    "SecondaryReplicaNode0",
                    "Outputs.NodePrivateIp"
                ]
            },
            "Description": "Private IP Address of Secondary Replica 0 Node",
            "Condition" : "IfSecondaryReplicaNode0"
        },
        "SecondaryReplicaNode1Ip": {
            "Value": {
                "Fn::GetAtt": [
                    "SecondaryReplicaNode1",
                    "Outputs.NodePrivateIp"
                ]
            },
            "Description": "Private IP Address of Secondary Replica 1 Node",
            "Condition" : "IfSecondaryReplicaNode0"
        }
    }
}